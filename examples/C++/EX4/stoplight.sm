//
// The contents of this file are subject to the Mozilla Public
// License Version 1.1 (the "License"); you may not use this file
// except in compliance with the License. You may obtain a copy of
// the License at http://www.mozilla.org/MPL/
// 
// Software distributed under the License is distributed on an "AS
// IS" basis, WITHOUT WARRANTY OF ANY KIND, either express or
// implied. See the License for the specific language governing
// rights and limitations under the License.
// 
// The Original Code is State Map Compiler (SMC).
// 
// The Initial Developer of the Original Code is Charles W. Rapp.
// Portions created by Charles W. Rapp are
// Copyright (C) 2000 Charles W. Rapp.
// All Rights Reserved.
// 
// Contributor(s): 
//
// State Map
//	Stoplight
//
// Description
//  This state map is recognizes the regular expression wcw(r) or
//  palindromes.
//
// RCS ID
// $Id$
//
// CHANGE LOG
// $Log$
// Revision 1.2  2001/12/14 20:10:36  cwrapp
// Changes in release 1.1.0:
// Add the following features:
// + 486786: Added the %package keyword which specifies the
//           Java package/C++ namespace/Tcl namespace
//           the SMC-generated classes will be placed.
// + 486471: The %class keyword accepts fully qualified
//           class names.
// + 491135: Add FSMContext methods getDebugStream and
//           setDebugStream.
// + 492165: Added -sync command line option which causes
//           the transition methods to be synchronized
//           (this option may only be used with -java).
//
// Revision 1.1.1.2  2001/03/26 14:41:46  cwrapp
// Corrected Entry/Exit action semantics. Exit actions are now
// executed only by simple transitions and pop transitions.
// Entry actions are executed by simple transitions and push
// transitions. Loopback transitions do not execute either Exit
// actions or entry actions. See SMC Programmer's manual for
// more information.
//
// Revision 1.1.1.1  2001/01/03 03:14:00  cwrapp
//
// ----------------------------------------------------------------------
// SMC - The State Map Compiler
// Version: 1.0, Beta 3
//
// SMC compiles state map descriptions into a target object oriented
// language. Currently supported languages are: C++, Java and [incr Tcl].
// SMC finite state machines have such features as:
// + Entry/Exit actions for states.
// + Transition guards
// + Transition arguments
// + Push and Pop transitions.
// + Default transitions. 
// ----------------------------------------------------------------------
//
// Revision 1.1.1.1  2000/08/02 12:51:00  charlesr
// Initial source import, SMC v. 1.0, Beta 1.
//

%{
#include "stoplightdefs.h"

extern int YellowTimer;
extern int NSGreenTimer;
extern int EWGreenTimer;
%}

%start StopMap::NorthSouthGreen
%class Stoplight
%header stoplight.h
%package cpp_ex4

%map StopMap
%%
EastWestGreen {
	Timeout				EastWestYellow		{ TurnLight(EWLIGHT, YELLOW);
											  SetTimer(YellowTimer);
											}
}

EastWestYellow {
	Timeout				NorthSouthGreen		{ TurnLight(EWLIGHT, RED);
											  TurnLight(NSLIGHT, GREEN);
											  SetTimer(NSGreenTimer);
											}
}

NorthSouthGreen {
	Timeout				NorthSouthYellow	{ TurnLight(NSLIGHT, YELLOW);
											  SetTimer(YellowTimer);
											}
}

NorthSouthYellow {
	Timeout				EastWestGreen		{ TurnLight(NSLIGHT, RED);
											  TurnLight(EWLIGHT, GREEN);
											  SetTimer(EWGreenTimer);
											}
}
%%
